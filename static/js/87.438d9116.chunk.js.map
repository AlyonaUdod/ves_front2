{"version":3,"file":"static/js/87.438d9116.chunk.js","mappings":"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","sources":["redux/persons/personsSelectors.js","components/AddPersonForm/AddPersonForm.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["export const selectPersons = state => state.persons.items;\n\nexport const isLoadingPersons = state => state.persons.isLoading;\n","import React, { useEffect } from 'react';\nimport { Button, Form, Input, InputNumber, Select } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPerson } from 'redux/persons/personsOperations';\nimport { isLoadingPersons } from 'redux/persons/personsSelectors';\n\nconst { Option } = Select;\n\n\nconst AddPersonForm = () => {\n\n  const formRef = React.useRef(null);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(isLoadingPersons);\n\n  useEffect(() => {\n    if (isLoading === 'success added') {\n      formRef.current.resetFields()\n    };\n  }, [isLoading])\n\n\n  const onFinish = values => {\n    dispatch(addPerson(values));\n  };\n  const onReset = () => {\n    formRef.current?.resetFields();\n  };\n  // const onFill = () => {\n  //   formRef.current?.setFieldsValue({\n  //     firstName: \"Alona\",\n  //     lastName: \"Udod\",\n  //     email: \"alona1@gmail.com\",\n  //     phone: \"+4793945868\",\n  //     profession: 'Frisor',\n  //     age: 32,\n  //     city: \"Bekkestua\",\n  //     // gender: 'woman',\n  //     countryBackground: \"Ukraine\",\n  //     // diversityLevel: 'monocultural',\n  //     comments: \"some comments\"\n  //   });\n  // };\n  return (\n    <Form\n      ref={formRef}\n      name=\"control-ref\"\n      onFinish={onFinish}\n      layout=\"vertical\"\n      size=\"small\"\n    >\n      <Form.Item\n        name=\"firstName\"\n        label=\"First name\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"lastName\"\n        label=\"Last name\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"age\"\n        label=\"Age\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}\n      >\n        <InputNumber min={0} max={99} style={{ width: '100%' }} />\n      </Form.Item>\n      <Form.Item\n        name=\"email\"\n        label=\"E-mail\"\n        rules={[\n          {\n            required: true,\n          },\n          {\n            type: 'email',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"phone\"\n        label=\"Phone\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"profession\"\n        label=\"Profession\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"countryBackground\"\n        label=\"Country background\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"city\"\n        label=\"City\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n     \n      <Form.Item\n        name=\"gender\"\n        label=\"Gender\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Select\n          placeholder=\"Select a option and change input text above\"\n          allowClear\n        >\n          <Option value=\"male\">male</Option>\n          <Option value=\"female\">female</Option>\n          <Option value=\"other\">other</Option>\n        </Select>\n      </Form.Item>\n      <Form.Item\n        name=\"diversityLevel\"\n        label=\"Diversity level\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Select\n          placeholder=\"Select a option and change input text above\"\n          allowClear\n        >\n          <Option value=\"monocultural\">monocultural</Option>\n          <Option value=\"multicultural\">multicultural</Option>\n          <Option value=\"cross-cultural\">cross-cultural</Option>\n        </Select>\n      </Form.Item>\n      <Form.Item\n        name=\"comments\"\n        label=\"Comments\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input.TextArea />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" loading={isLoading === 'add person'}>\n          Submit\n        </Button>\n        <Button htmlType=\"button\" onClick={onReset}>\n          Reset\n        </Button>\n        {/* <Button type=\"link\" htmlType=\"button\" onClick={onFill}>\n          Fill form\n        </Button> */}\n      </Form.Item>\n    </Form>\n  );\n};\nexport default AddPersonForm;\n","import { Space, Table, Button, Input, Modal, Popconfirm } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { getPersons } from 'redux/persons/personsOperations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isLoadingPersons, selectPersons } from 'redux/persons/personsSelectors';\nimport AddPersonForm from 'components/AddPersonForm/AddPersonForm';\nconst { Column } = Table;\n\nconst HomePage = () => {\n  const onSearch = value => console.log(value);\n  const dispatch = useDispatch();\n  const persons = useSelector(selectPersons);\n  const isLoading = useSelector(isLoadingPersons);\n\n  useEffect(() => {\n    if (isLoading === 'success added') {\n      setIsModal(false);\n    };\n  }, [isLoading])\n\n  useEffect(() => {\n    dispatch(getPersons());\n  }, [dispatch]);\n  console.log(persons);\n\n  const [isModal, setIsModal] = useState(false);\n  const [popupOpen, setPopupOpen] = useState(false);\n  const handleCancel = () => {\n    setPopupOpen(true);\n  };\n\n  const handlePopupConfirm = () => {\n    setIsModal(false);\n    setPopupOpen(false);\n  };\n\n  const handlePopupCancel = () => {\n    setPopupOpen(false);\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          width: '100%',\n          padding: '24px',\n        }}\n      >\n        <Input.Search\n          placeholder=\"input search text\"\n          onSearch={onSearch}\n          enterButton\n          style={{ marginRight: '24px' }}\n        />\n        {/* <Button disabled={!selectedRowKeys.length} type=\"primary\">\n          Export excel\n        </Button> */}\n        <Button type='primary' onClick={() => setIsModal(true)}>Add person</Button>\n      </div>\n      <Table\n        // rowSelection={rowSelection}\n        bordered\n        rowKey=\"_id\"\n        style={{ padding: '0 24px' }}\n        dataSource={persons}\n        size=\"small\"\n        pagination={{ pageSize: 10 }}\n        scroll={{\n          y: 300,\n          x: 'auto',\n        }}\n        expandable={{\n          expandedRowRender: record => (\n            <p\n              style={{\n                margin: 0,\n              }}\n            >\n              {record.comments}\n            </p>\n          ),\n        }}\n      >\n        <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\" />\n        <Column title=\"Last Name\" dataIndex=\"lastName\" key=\"lastName\" />\n        <Column title=\"Age\" dataIndex=\"age\" key=\"age\" />\n        <Column title=\"e-mail\" dataIndex=\"email\" key=\"email\" />\n        <Column title=\"Phone\" dataIndex=\"phone\" key=\"phone\" />\n        <Column title=\"Profession\" dataIndex=\"profession\" key=\"profession\" />\n        <Column\n          title=\"Country background\"\n          dataIndex=\"countryBackground\"\n          key=\"countryBackground\"\n        />\n        <Column title=\"City\" dataIndex=\"city\" key=\"city\" />\n        <Column title=\"Gender\" dataIndex=\"gender\" key=\"gender\" />\n        <Column title=\"Diversity level\" dataIndex=\"diversityLevel\" key=\"diversityLevel\" />\n        <Column\n          title=\"Action\"\n          key=\"action\"\n          render={(_, record) => (\n            <Space size=\"middle\">\n              <Button type=\"link\">\n                Invite {record.firstName} {record.lastName}\n              </Button>\n            </Space>\n          )}\n        />\n      </Table>\n      <Popconfirm\n        title=\"Are you sure you want to close this modal?\"\n        open={popupOpen}\n        onConfirm={handlePopupConfirm}\n        onCancel={handlePopupCancel}\n        okText=\"Yes\"\n        cancelText=\"No\"\n      />\n      <Modal\n        centered\n        title=\"Add Person\"\n        open={isModal}\n        // onOk={() => console.log('ok')}\n        footer={null}\n        onCancel={handleCancel}\n        style={{margin: '20px 0'}}\n      >\n        <AddPersonForm/>\n      </Modal>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["selectPersons","state","persons","items","isLoadingPersons","isLoading","Option","Select","formRef","React","dispatch","useDispatch","useSelector","useEffect","current","resetFields","ref","name","onFinish","values","addPerson","layout","size","label","rules","required","min","max","style","width","type","placeholder","allowClear","value","htmlType","loading","onClick","Column","Table","setIsModal","getPersons","console","log","useState","isModal","popupOpen","setPopupOpen","display","justifyContent","padding","onSearch","enterButton","marginRight","bordered","rowKey","dataSource","pagination","pageSize","scroll","y","x","expandable","expandedRowRender","record","margin","comments","title","dataIndex","render","_","firstName","lastName","open","onConfirm","onCancel","okText","cancelText","centered","footer"],"sourceRoot":""}